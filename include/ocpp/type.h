/*
 * SPDX-FileCopyrightText: 2024 Kyunghwan Kwon <k@libmcu.org>
 *
 * SPDX-License-Identifier: MIT
 */

#ifndef OCPP_TYPE_H
#define OCPP_TYPE_H

#if defined(__cplusplus)
extern "C" {
#endif

#define OCPP_MESSAGE_ID_MAXLEN		(36 + 1/*null*/)

typedef enum {
	OCPP_MSG_ROLE_NONE		= 0,
	OCPP_MSG_ROLE_ALLOC		= 1,
	OCPP_MSG_ROLE_CALL		= 2,
	OCPP_MSG_ROLE_CALLRESULT	= 3,
	OCPP_MSG_ROLE_CALLERROR		= 4,
} ocpp_message_role_t;

typedef enum {
	OCPP_MSG_CORE_AUTHORIZE,
	OCPP_MSG_CORE_BOOTNOTIFICATION,
	OCPP_MSG_CORE_CHANGE_AVAILABILITY,
	OCPP_MSG_CORE_CHANGE_CONFIGURATION,
	OCPP_MSG_CORE_CLEAR_CACHE,
	OCPP_MSG_CORE_DATA_TRANSFER,
	OCPP_MSG_CORE_GET_CONFIGURATION,
	OCPP_MSG_CORE_HEARTBEAT,
	OCPP_MSG_CORE_METER_VALUES,
	OCPP_MSG_CORE_REMOTE_START_TRANSACTION,
	OCPP_MSG_CORE_REMOTE_STOP_TRANSACTION,
	OCPP_MSG_CORE_RESET,
	OCPP_MSG_CORE_START_TRANSACTION,
	OCPP_MSG_CORE_STATUS_NOTIFICATION,
	OCPP_MSG_CORE_STOP_TRANSACTION,
	OCPP_MSG_CORE_UNLOCK_CONNECTOR,

	OCPP_MSG_FWMGMT_GET_DIAGNOSTICS,
	OCPP_MSG_FWMGMT_DIAGNOSTICS_NOTIFICATION,
	OCPP_MSG_FWMGMT_STATUS_NOTIFICATION,
	OCPP_MSG_FWMGMT_UPDATE_FIRMWARE,

	OCPP_MSG_LOCAL_GET_LIST_VERSION,
	OCPP_MSG_LOCAL_SEND_LIST,

	OCPP_MSG_RESERVE_CANCEL,
	OCPP_MSG_RESERVE_NOW,

	OCPP_MSG_SC_CLEAR_CHARGING_PROFILE,
	OCPP_MSG_SC_GET_COMPOSITE_SCHEDULE,
	OCPP_MSG_SC_SET_CHARGING_PROFILE,

	OCPP_MSG_REMOTE_TRIGGER,
} ocpp_message_t;

typedef enum {
	OCPP_CONNECTOR_STATE_UNKNOWN,
	OCPP_CONNECTOR_STATE_UNAVAILABLE,
	OCPP_CONNECTOR_STATE_AVAILABLE,
	OCPP_CONNECTOR_STATE_PREPARING,
	OCPP_CONNECTOR_STATE_CHARGING,
	OCPP_CONNECTOR_STATE_FINISHING,
} ocpp_connector_state_t;

typedef enum {
	OCPP_MEASURAND_CURRENT_EXPORT			= 0x000001,
	OCPP_MEASURAND_CURRENT_IMPORT			= 0x000002,
	OCPP_MEASURAND_CURRENT_OFFERED			= 0x000004,
	OCPP_MEASURAND_ENERGY_ACTIVE_EXPORT_REGISTER	= 0x000008,
	OCPP_MEASURAND_ENERGY_ACTIVE_IMPORT_REGISTER	= 0x000010,
	OCPP_MEASURAND_ENERGY_REACTIVE_EXPORT_REGISTER	= 0x000020,
	OCPP_MEASURAND_ENERGY_REACTIVE_IMPORT_REGISTER	= 0x000040,
	OCPP_MEASURAND_ENERGY_ACTIVE_EXPORT_INTERVAL	= 0x000080,
	OCPP_MEASURAND_ENERGY_ACTIVE_IMPORT_INTERVAL	= 0x000100,
	OCPP_MEASURAND_ENERGY_REACTIVE_EXPORT_INTERVAL	= 0x000200,
	OCPP_MEASURAND_ENERGY_REACTIVE_IMPORT_INTERVAL	= 0x000400,
	OCPP_MEASURAND_FREQUENCY			= 0x000800,
	OCPP_MEASURAND_POWER_ACTIVE_EXPORT		= 0x001000,
	OCPP_MEASURAND_POWER_ACTIVE_IMPORT		= 0x002000,
	OCPP_MEASURAND_POWER_FACTOR			= 0x004000,
	OCPP_MEASURAND_POWER_OFFERED			= 0x008000,
	OCPP_MEASURAND_POWER_REACTIVE_EXPORT		= 0x010000,
	OCPP_MEASURAND_POWER_REACTIVE_IMPORT		= 0x020000,
	OCPP_MEASURAND_RPM				= 0x040000,
	OCPP_MEASURAND_SOC				= 0x080000,
	OCPP_MEASURAND_TEMPERATURE			= 0x100000,
	OCPP_MEASURAND_VOLTAGE				= 0x200000,
} ocpp_measurand_t;

#if defined(__cplusplus)
}
#endif

#endif /* OCPP_TYPE_H */
